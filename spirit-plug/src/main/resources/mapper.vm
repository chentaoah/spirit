<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="${daoClassName}">

##======================================================================================
	<resultMap id="resultMap" type="${voClassName}">
#foreach(${field} in ${fields})
		<result property="${field.property}" column="${field.column}" />
#end
	</resultMap>
##======================================================================================

##======================================================================================
	<sql id="columns">
#foreach(${field} in ${fields})
#if(${velocityCount} < ${fields.size()})
		${field.column},
#else
		${field.column}
#end
#end
	</sql>
##======================================================================================

##======================================================================================
	<insert id="save" parameterType="${voClassName}" useGeneratedKeys="true" keyProperty="id">
		insert into ${tableName} (<include refid="columns" />) values
		(
		null,
#foreach(${field} in ${fields})
#if(${field.property} != "id")
#if(${velocityCount} < ${fields.size()})
		${field.express},
#else
		${field.express}
#end
#end
#end
		)
	</insert>
##======================================================================================
	
##======================================================================================
	<delete id="deleteById" parameterType="java.lang.Integer" resultType="java.lang.Integer">
		delete from ${tableName} where id = #{id}
	</delete>
##======================================================================================

##======================================================================================
	<update id="update" parameterType="${voClassName}" resultType="java.lang.Integer">
		update ${tableName}
		<set>
#foreach(${field} in ${fields})
			<if test="${field.property} != null">${field.column} = ${field.express},</if>
#end
		</set>
		where id = #{id}
	</update>
##======================================================================================

##======================================================================================
#foreach(${field} in ${fields})
#if(${field.primary} == true)
	<select id="queryBy${field.upperCase}" resultMap="resultMap">
		select <include refid="columns" /> from ${tableName} where ${field.column} = ${field.express}
	</select>
	
#end
#end
	<select id="query" resultMap="resultMap">
		select <include refid="columns" /> from ${tableName}
		<where>
#buildSelectContent($fields, "p", false)
		</where>
		order by id desc limit #{startIndex}, #{pageSize}
	</select>

	<select id="queryCount" parameterType="${voClassName}" resultType="java.lang.Integer">
		select count(*) from ${tableName}
		<where>
#buildSelectContent($fields, "" , false)
		</where>
	</select>
	
	<select id="queryByMap" parameterType="java.util.Map" resultMap="resultMap">
		select <include refid="columns" /> from ${tableName}
		<where>
#buildSelectContent($fields, "", true)
		</where>
		order by id desc limit #{startIndex}, #{pageSize}
	</select>
	
	<select id="queryCountByMap" parameterType="java.util.Map" resultType="java.lang.Integer">
		select count(*) from ${tableName}
		<where>
#buildSelectContent($fields, "", true)
		</where>
	</select>
##======================================================================================

##构建查询语句的宏
#macro(buildSelectContent $fields $p $range)
#foreach(${field} in ${fields})
#if(${p} != "")
#set($field.prefix = $p)
#end
#if(${velocityCount} > 1)
#set($prefix = "and ")
#end
#if(${field.like} == true)
			<if test="${field.property} != null and ${field.property} != ''">$!{prefix}${field.column} like concat('%', ${field.express}, '%')</if>
#elseif(${range} == true && ${field.range} == true)
			<if test="${field.property}Lower != null and ${field.property}Lower != ''">$!{prefix}${field.column} &gt;= #{${field.property}Lower}</if>
			<if test="${field.property}Upper != null and ${field.property}Upper != ''">$!{prefix}${field.column} &lt;= #{${field.property}Upper}</if>
#elseif(${range} == true && ${field.jdbcType} == "ENUM")
			<if test="${field.property} != null">$!{prefix}${field.column} in
				<foreach collection="${field.property}" index="index" item="item" open="(" separator="," close=")">
					#{item}
				</foreach>
			</if>
			<if test="${field.property}Exclude != null">$!{prefix}${field.column} not in
				<foreach collection="${field.property}Exclude" index="index" item="item" open="(" separator="," close=")">
					#{item}
				</foreach>
			</if>
#else
			<if test="${field.property} != null and ${field.property} != ''">$!{prefix}${field.column} = ${field.express}</if>
#end
#set($field.prefix = "")
#set($prefix = "")
#end
#end
</mapper>